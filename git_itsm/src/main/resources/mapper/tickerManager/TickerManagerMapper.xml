<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yescnc.jarvis.db.tickerManager.TickerManagerMapper">

	<select id="getTickerList" resultType="java.util.HashMap"><!-- Ticker List -->
		SELECT 
			@ROWNUM := @ROWNUM + 1 recid,
			 sequence_id sequenceId,
			 ticker_text tickerText,
			 create_date createDate,
			 start_date startDate,
			 end_date endDate,
			 ticker_status tickerStatus,
			 ticker_priority tickerPriority
		 FROM 
		 	DAVIS_TICKER, (SELECT @ROWNUM := 0) recid
		 ORDER BY ticker_status desc, ticker_priority asc;
	</select>
	
	<select id="getTickerScrollingList"  resultType="java.util.HashMap"><!-- Scrolling List -->
		SELECT 
			@ROWNUM := @ROWNUM + 1 recid,
			 sequence_id sequenceId,
			 ticker_text tickerText,
			 create_date createDate,
			 start_date startDate,
			 end_date endDate,
			 ticker_status tickerStatus,
			 ticker_priority tickerPriority
		 FROM 
		 	DAVIS_TICKER, (SELECT @ROWNUM := 0) recid
		 	WHERE end_date <![CDATA[ >= ]]> current_date()
		 	AND start_date <![CDATA[ <= ]]> current_date()
		 	AND ticker_status = 1
		 ORDER BY ticker_status desc, ticker_priority asc;
	</select>
	
	<select id="searchTickerList" resultType="com.yescnc.jarvis.entity.db.TickerVO">
		SELECT
			@ROWNUM := @ROWNUM + 1 recid,
			sequence_id sequenceId,
			ticker_text tickerText,
			create_date createDate,
			start_date startDate,
			
			end_date endDate,
			ticker_status tickerStatus,
			ticker_priority tickerPriority
		FROM
			DAVIS_TICKER, (SELECT @ROWNUM := 0) recid
		WHERE
		<if test="tickerText != null">
			ticker_text LIKE CONCAT('%',#{tickerText},'%')
		</if>
		<!-- <if test="startDate != null || endDate != null">
			AND startDate <![CDATA[ >= ]]> date_format(#{searchFromPeriod}, '%Y-%m-%d')
			AND endDate <![CDATA[ <= ]]>  date_format(#{searchToPeriod}, '%Y-%m-%d')
		</if> -->
		
	</select>
	
	<insert id="createTicker" parameterType="java.util.HashMap">
		INSERT INTO DAVIS_TICKER(ticker_text, create_date, start_date, end_date, ticker_status, ticker_priority)
		VALUES (#{tickerText}, #{createDate}, #{startDate}, #{endDate}, #{tickerStatus}, #{tickerPriority})
	</insert>
	
	<update id="updateTicker" parameterType="java.util.HashMap">
		UPDATE DAVIS_TICKER SET
		ticker_text = #{tickerText}, create_date = #{createDate}, start_date = #{startDate}, end_date = #{endDate}, ticker_status = #{tickerStatus}, ticker_priority = #{tickerPriority}
		WHERE sequence_id = #{sequenceId}
	</update>
	
	<delete id="deleteTicker" parameterType="java.util.HashMap">
		DELETE
		FROM DAVIS_TICKER
		WHERE
			TICKER_TEXT in 
			<foreach item="item" index="index" collection="param" open="(" separator="," close=")">
	       		#{item}
			</foreach>		
	</delete>
	
	<select id="getRowCount" resultType="Integer">
		select FOUND_ROWS()
	</select>
</mapper>